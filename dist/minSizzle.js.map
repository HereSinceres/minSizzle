{"version":3,"sources":["minSizzle.js"],"names":["window","isWindow","obj","isDocument","nodeType","isArray","Object","prototype","toString","call","isFunction","makeArray","iterable","ret","len","length","matchEl","crumb","context","console","log","result","tagName","match","i","concat","getElementsByTagName","toUpperCase","replace","RegExp","test","id","matchExpr","j","splice","clazz","className","pattern","minSizzle","selector","selectorArray","document","getElementById","split","temp","identifier","ID","CLASS","TAG","_sizzle","noConflict","define","amd","module","exports"],"mappings":"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","file":"minSizzle.js","sourcesContent":["(function (window) {\r\n    // http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\r\n    //identifier 匹配规则\r\n    var identifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\";\r\n    var matchExpr = {\r\n        \"ID\": new RegExp(\"^#(\" + identifier + \")\"),\r\n        \"CLASS\": new RegExp(\"^\\\\.(\" + identifier + \")\"),\r\n        \"TAG\": new RegExp(\"^(\" + identifier + \"|[*])\")\r\n    };\r\n\r\n\r\n    function isWindow(obj) {\r\n        return obj != null && obj.window == window;\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType && obj.nodeType == 9;\r\n    }\r\n\r\n    function isArray(obj) {\r\n        return Object.prototype.toString.call(obj) == \"[object Array]\";\r\n    }\r\n\r\n    function isFunction(obj) {\r\n        return Object.prototype.toString.call(obj) == \"[object Function]\";\r\n    }\r\n\r\n    function makeArray(iterable) {\r\n        var ret = [],\r\n            len = iterable.length;\r\n        //String、window和function也有length属性\r\n        if (len == null || typeof iterable === \"string\" || isFunction(iterable) || isWindow(iterable))\r\n            ret[0] = iterable;\r\n        else\r\n            while (len)\r\n                ret[--len] = iterable[len];\r\n        return ret;\r\n    }\r\n\r\n\r\n    /**\r\n     * 在上下文中根据选择器文本匹配DOM\r\n     * @param  {} crumb 选择器文本 'div#js-id.js-class ul.js-ul li p'\r\n     * @param  {} context 上下文限定\r\n     * @return {Array} 匹配到的DOM节点组成的数组\r\n     */\r\n    function matchEl(crumb, context) {\r\n        console.log(context);\r\n        var result = [],\r\n            ret;\r\n        //上下文为数组\r\n        context = isArray(context) ? context : [context];\r\n        //获取标签\r\n        var tagName = crumb.match(/^\\w+/) !== null && crumb.match(/^\\w+/)[0] || \"*\";\r\n        for (var i = 0, len = context.length; i < len; i++) {\r\n            result = result.concat(\r\n                makeArray(\r\n                    context[i].getElementsByTagName(tagName.toUpperCase())));\r\n        }\r\n        if (tagName !== \"*\") {\r\n            crumb = crumb.replace(new RegExp(\"^\" + tagName, \"\"), \"\");\r\n        }\r\n        //id\r\n        if (/^#/.test(crumb)) {\r\n            var id = crumb.match(matchExpr[\"ID\"])[0].replace(\"#\", \"\");\r\n            crumb = crumb.replace(new RegExp(\"^#\" + id, \"\"), \"\");\r\n            for (var j = 0, len = result.length; j < len; j++) {\r\n                //shortcut\r\n                ret = result[j];\r\n                if (ret.id != id) {\r\n                    result.splice(j, 1);\r\n                    len--;\r\n                    --j;\r\n                }\r\n            }\r\n        }\r\n\r\n        //class\r\n        if (/^\\./.test(crumb)) {\r\n            var clazz = crumb.match(matchExpr[\"CLASS\"])[0].replace(\".\", \"\");\r\n            var crumb = crumb.replace(new RegExp(\"^\\.\" + clazz, \"\"), \"\");\r\n            for (var j = 0, len = result.length; j < len; j++) {\r\n                ret = result[j];\r\n                className = \" \" + ret.className + \" \";\r\n                var pattern = new RegExp(clazz, \"\");\r\n                if (!pattern.test(className)) {\r\n                    result.splice(j, 1);\r\n                    len--;\r\n                    --j;\r\n                }\r\n            }\r\n        }\r\n        crumb = crumb.replace(/^\\s+/, \"\");\r\n        if (crumb)\r\n            return matchEl(crumb, result);\r\n        else {\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param  {} 选择器\r\n     * @param  {} 源上下文\r\n     */\r\n    function minSizzle(selector, context) {\r\n        var selectorArray, result = [];\r\n        //保证集合中至少有一个元素\r\n        selector = selector || document;\r\n        //保证有初始上下文，默认亦为document\r\n        context = context && context.nodeType === 1 ? context : document;\r\n        //是否是document或者window\r\n        if (isDocument(selector) || isWindow(selector))\r\n            return selector;\r\n        //DOM元素的nodeType值均为1\r\n        if (selector.nodeType === 1) {\r\n            return selector;\r\n        }\r\n        //如果是字符串进入匹配\r\n        if (typeof selector == \"string\") {\r\n            selector = selector.replace(/^\\s+|\\s+$/g, \"\");\r\n            //ID选择\r\n            if (matchExpr[\"ID\"].test(selector)) {\r\n                return document.getElementById(selector.replace(\"#\", \"\"));\r\n            } else {\r\n                selectorArray = selector.split(\",\");\r\n                for (var i = 0, len = selectorArray.length; i < len; i++) {\r\n                    var temp = selectorArray[i].replace(/^\\s+|\\s+$/g, \"\");\r\n                    if (temp) {\r\n                        result = result.concat(matchEl(temp, context));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    var _sizzle = window.minSizzle;\r\n\r\n    minSizzle.noConflict = function () {\r\n        if (window.minSizzle === minSizzle) {\r\n            window.minSizzle = _sizzle;\r\n        }\r\n\r\n        return minSizzle;\r\n    };\r\n\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(function () {\r\n            return minSizzle;\r\n        });\r\n    } else if (typeof module !== \"undefined\" && module.exports) {\r\n        module.exports = minSizzle;\r\n    } else {\r\n        window.minSizzle = minSizzle;\r\n    }\r\n})(window)"]}